Unit Cart;
var 



/**
<h3>Initialise a Cartridge build</h3>

<p>Place Cart::Init as the first line in your main program to make
then program run as a Vic 20 cartridge. See also Cart::Autostart
which must be placed in a startblock addressed at $a000.</p>

<h3>INSTRUCTIONS</h3>


<p>
1.	Place this under the VAR section of your main program:
</p>

<code>
@define BUILDCRT	1		// uncomment to build for cartridge
</code>

<p>
2.	To use, place this above Main program and procedures:
</p>

<code>	
// The magic bytes needed at address $A000

@startblock $A000 "CARTAUTOSTART"
@donotremove cartAutostart
@ifdef BUILDCRT
procedure cartAutostart();
begin

	cart::Autostart();
	
end;
@endif
@endblock
</code>

<p>
3.	And then this as the first line in the Main Program:
</p>

<code>
	@ifdef BUILDCRT

		cart::Init();
	
	@endif
</code>

<p>
4.	Place the required exports in your program:
</p>

<code>
	// set which blocks of memory to export
	// as separate 8k blocks
//	@exportprg2bin "main.prg" "2000.prg" $2000 $4000	
//	@exportprg2bin "main.prg" "4000.prg" $4000 $6000	
//	@exportprg2bin "main.prg" "6000.prg" $6000 $8000	
	@exportprg2bin "main.prg" "a000.prg" $a000 $c000
</code>

<p>
5.	Set project settings
</p>

<code>
@ifdef BUILDCRT
	
	// These project settings are needed to run as a cartridge build
	@projectsettings "ignorebasicsysstart" 0
	@projectsettings "basicsysaddress" $1200
	@projectsettings "startaddress" $2000		// if using more than on 8k block
//	@projectsettings "startaddress" $A1A0		// if just an 8k cart in A000
	
@endif	
</code>

**/


procedure Init() inline;
begin

	// Initialize system when run as cartridge
	asm("
		jmp PRGstart		; resolves problem with joystick to start prg builds here

CRTStart:					; crt builds start here

		; Disable interrupts
		sei
     	cld                 ; clear decimal mode
     	
     	ldx #$FB			; value for start stack
     	txs					; set stack pointer
     	
		; Run kernal setup routines.
		jsr $FD8D			; initialise and test RAM
PRGstart:		
		jsr $FD52			; restore default I/O vectors
		jsr $FDF9			; initialize I/O registers 
restoreKeyStart:
		; Disable interrupts again (for Restore-key)
		sei
		jsr $E518			; initialise hardware
		
     	cli					; enable interrupts
     
     	jsr $E45B			; initialise BASIC vector tables
     	jsr $E3A4			; initialise BASIC RAM locations     
     	jsr $C644			; perform NEW (bypass check)

		; Prevent lower/uppercase swap
		lda #$80
		sta $0291		

	");

end;

// -------------------------------------------------------------------------------
// The magic bytes needed at address $A000

/**
<p>Creates the magic bytes needed for a Cartridge to autostart when your
program is built into a cartridge ROM. This needs to go into address 
$a000 and a startblock can be used to achieve this. See cart::init for a full
explanation and instructions on setting up.</p>
**/
procedure Autostart() inline;
begin
	asm("
	dc.b <CRTStart,>CRTStart				; Cart reset start address
	dc.b <restoreKeyStart,>restoreKeyStart 	; Restore keypress jump address
	dc.b $41,$30,$c3,$c2,$cd				; Signature for cart autostart (a0CBM)
	"); 
end;

// -------------------------------------------------------------------------------


end.
