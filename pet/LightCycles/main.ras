/**
 *	Two Player Light Cycles
 *	Supports SPT Dual Joystick Interface
 *	JLP 2023 (fuzzybad@gmail.com)
 */

program LightCycles;

@use "os/interrupts"
@use "os/model"
//@use "output/pbm"	- fatal error - needs PBM file
//@use "input/key"	- compiler error when I try to use Held or Pressed
//@use "compression/compression"	- Only use for large files - small ones INCREASE in size with this
//@use "str"
//@use "crt"
//@use "output/screen"
//@use "output/pob"

// Set the model of PET required
//@projectsettings "petmodel" "3032"

// === includes =====================================
@include "variables.ras"
@include "support_functions.ras"
@include "functions.ras"

// === main logic ===================================
procedure game_loop();
begin
	while (game_over_flag=0) do
	begin
	  	// check input devices
	  	check_input();
		// update positions
		update_positions();
		// go vroom
	  	alternate_engine_sound();
	  	// check collisions
	  	check_collisions();
	  	// game state
	  	check_game_state();
	  	// update screen
	  	update_screen();
	
	  	if( game_over_flag = 1 ) then return;
	  	
	  	// Slow it down
		// @@TODO: Replace with interrupt routine
	  	do_delay(game_speed);
	end;
end;

// Init
begin
	// Disable interrupts
	Interrupts::Disable();

	DefineScreen();
	screen_loc := #SCREEN_CHAR_LOC;
	set_uppercase();

	// Primary loop
	while(1) do
	begin
		game_over_flag := 0;
		title_screen();
		game_screen();
		game_loop();
	end;
end.

// eof