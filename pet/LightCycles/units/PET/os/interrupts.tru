Unit Interrupts;
var

	interruptFlag: 	byte at $e813; @donotremove "interruptFlag"
	@donotremove org_orq
	org_irq : pointer;
	isInitialised : boolean = false;
	irq_address : integer at $90;

/**
<p>Disables interrupts. This prevents a number of things from running 
including the kernal's keyboard scan and the jiffy clock TI$. 
As these things are not running every frame you will see some speed
benefits in your main code.
<p>The Key unit is not affected as it polls the keyboard directly. 
**/
procedure Disable() inline;
begin

	interruptFlag := 60;

end;

/**
<p>Enables interrupts.
**/
procedure Enable() inline;
begin

	interruptFlag := 61;

end;

/**
<p>Starts an IRQ	
**/
procedure StartIRQ() inline;
begin
	asm("
	pha
	txa
	pha
	tya
	pha
	");
end;


/**
<p>Ends an IRQ
**/
procedure CloseIRQ() inline;
begin
	asm("
	pla 
	tay
	pla 
	tax
	pla

	jmp (Interrupts_org_irq)
	");
end;

procedure RasterIRQ(addr:integer);
begin
	if (isInitialised = false) then
	begin
		asm("
		lda $90
		sta Interrupts_org_irq
		lda $91
		sta Interrupts_org_irq+1
	 	");
	 	isInitialised := true;
	end;		
					
	asm("	sei	");
	irq_address:=addr;
	asm("	cli	");
			
		
end;


end.
