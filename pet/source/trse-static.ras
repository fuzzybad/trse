/**
 * This is an example file distributed as part of the Turbo Rascal Syntax Error
 * development platform.
 * 
 * https://turborascal.com
 * https://github.com/leuat/TRSE
 *
 * License: GPL V3
 *
 * Splash screen and 40/80 selection added 9/2020 by Fuzzybad 
 * 
 */
program Randomness;
var  
	random_color,x,y,index: byte; 
	// Array of random bytes
	random_values : array[256] of byte; 
	// Pointer to screen and color ram
	screenP, zp : pointer;
	
	// Used for keyboard input
	key,numkeys : byte;
	
	// Text for splash screen  	
	titlemsg: string  = ("TRSE EXAMPLE 4  'RANDOMNESS'");
	authormsg: string = ("40/80 VERSION 9/2020");
	promptmsg: string = ("USE ", 244, "0 OR ", 248, "0 COLUMN SCREEN?");
	exitmsg: string   = (211, 208, 193, 195, 197, " TO QUIT");
	
	// Holds value from user selection for screen width 
	myscreenwidth: byte = 0;


/* 
	Method to get a char from the keyboard buffer
	TRSE procedures return accumulator value
*/
procedure getKey();
begin
	call(^$ffe4);	// getin
end;
	

/* 
	Method which shows title screen and checks screen width
*/
procedure showTitle();
begin
	// Clear screen
	clearscreen($20, screen_char_loc);

	// Show the title text
	moveto(6,1,hi(screen_char_loc));
   	printString(titlemsg,0,28);

	moveto(10,2,hi(screen_char_loc));
   	printString(authormsg,0,20);

	// Ask user if they have 40 or 80 column screen
	moveto(7,4,hi(screen_char_loc));
    printString(promptmsg,0,27);    

	// Show the quit instruction
	moveto(14,11,hi(screen_char_loc));
   	printString(exitmsg,0,13);

	while (myscreenwidth=0) do	begin
		// 009E			No. of Chars. in Keyboard Buffer (Queue)
		// 00E3 		Size of Keyboard Buffer
		// 0270-027A  	Keyboard Buffer Queue (FIFO)

		// Is there a value in the character buffer?
		numkeys := peek(^$009E, 0);

		if(numkeys > 0) then begin
			key := getKey();

			// 52 is '4'
			if(key = 52) then 
		    	myscreenwidth := 40;

			// 56 is '8'
			if(key = 56) then 
		    	myscreenwidth := 80;

		end;
    end;
end;

// Initialize a random table of 256 bytes
// generator
procedure InitializeRandom();
begin
	// same as : for x:=0 to 0 do begin..
	for x:=0 to 256 do begin 
		random_values[x]:=Random();
    end;
end;

begin
	// Show the title and check number of columns
	showTitle();

	InitializeRandom();
	
	// point to start of random table
	index:=0; 
	
	// infinite loop
	while (true) do  begin
		// Set pointer to point to beginning of screen/color ram ($0400 and $D800)
		screenP:=screen_char_loc;
		// loop y		
		for y:=0 to screen_height do begin
			// moves current screen position
			// Select some random color
			zp:=random_values+index;
			memcpy(zp,0,screenP,myscreenwidth);
			index:=index+11;
			screenP:=screenP+myscreenwidth;
		end;
		
		// Exit if user pressed space
		if(getKey() = 32) then begin
		    // Clear screen
			clearscreen($20, screen_char_loc);

			//call(^$fd16);	// RESET
		    call(^$fd49);	// Trigger NMI	    
		end;
	end;

end.


