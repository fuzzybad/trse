

//	Method to get a char from the keyboard buffer
//	TRSE procedures return accumulator value
procedure GetKey();
begin
	call(^$ffe4);	// getin
end;

// Wait for user input
procedure WaitForKeypress();
begin
	// Pause until key pressed
	temp := 0;
	while( temp = 0 ) do begin
		temp := GetKey();
	end;
end;

// Do timing delay 
// @TODO: Find better way than delay loop
procedure DoDelay(mydelay:byte);
begin
	if( mydelay > 0 ) then
	begin
		for i := 0 to mydelay do	
		begin
			wait(255);
		end;
	end;
end;

// Debug up to 3 numeric vars
procedure PrintXYZ( myX:integer, myY:signed byte, myZ:signed byte );
begin
	// Erase & print values
	moveto(1, 5, hi(SCREEN_CHAR_LOC));
	PrintDecimal(0, 4);
	PrintDecimal(myX, 4);

	moveto(1, 6, hi(SCREEN_CHAR_LOC));
	PrintDecimal(0, 2);
	PrintDecimal(myY, 2);

	moveto(1, 7, hi(SCREEN_CHAR_LOC));
	PrintDecimal(0, 2);
	PrintDecimal(myZ, 2);
end;

// Check for any user inputs
procedure CheckInputs();
begin	
	key := GetKey();

	// Q - Quit
	if(key = 81) then begin
		clearscreen($20, SCREEN_CHAR_LOC);
		call(^$FCE2);	// RESET	 (SYS 64738)
	end;
	
	// 0-9 Adjust speed 
	if(key = 48) then speed := 9; // (slowest)
	if(key = 49) then speed := 8;
	if(key = 50) then speed := 7;
	if(key = 51) then speed := 6;
	if(key = 52) then speed := 5;
	if(key = 53) then speed := 4;
	if(key = 54) then speed := 3;
	if(key = 55) then speed := 2;
	if(key = 56) then speed := 1;
	if(key = 57) then speed := 0; // (fastest)
end;

// Poke value into an address
procedure PokeAddr(pokeaddr_x:byte, pokeaddr_y:byte, pokeaddr_v:byte, pokeaddr_c:byte);
begin
	if(pokeaddr_x > SCREEN_WIDTH - 1) then return;
	if(pokeaddr_x < 0) then return;
	if(pokeaddr_y > SCREEN_HEIGHT - 1) then return;
	if(pokeaddr_y < 0) then return;

	// Using AddressTable for screen updates
	// This is faster than using poke()
	p := AddressTable( #saddr, pokeaddr_x, pokeaddr_y ); // pick row 24 (range is 0 to 24) and column 39 (range is 0 to 39)
	p[0] := pokeaddr_v;  // place a character at the bottom right of the display

	p := AddressTable( #caddr, pokeaddr_x, pokeaddr_y ); // pick same location in colour RAM
	p[0] := pokeaddr_c;

	/*
	// Pointer value to screen RAM
	p := SCREEN_CHAR_LOC + SCREEN_WIDTH * pokeaddr_y + pokeaddr_x;
	poke(p, 0, pokeaddr_v);

	// Pointer value to color RAM
	p := SCREEN_COL_LOC + SCREEN_WIDTH * pokeaddr_y + pokeaddr_x;
	poke(p, 0, pokeaddr_c);
	*/
end;

